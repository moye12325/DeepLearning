network: MLP(
  (layer1): Linear(in_features=470, out_features=256, bias=True)
  (layer2): Linear(in_features=256, out_features=64, bias=True)
  (out): Linear(in_features=64, out_features=1, bias=True)
)
  0%|          | 0/2000 [00:02<?, ?it/s]
Traceback (most recent call last):
  File "D:\Projects\DeepLearning\Demo\MLP简单版.py", line 143, in <module>
    train_ls, valid_ls = train(net, train_features, train_labels, None, None, num_epochs, lr, weight_decay, batch_size)
  File "D:\Projects\DeepLearning\Demo\MLP简单版.py", line 121, in train
    record_loss = log_rmse(net.to('cpu'), train_features, train_labels)
  File "D:\Projects\DeepLearning\Demo\MLP简单版.py", line 100, in log_rmse
    clipped_preds = torch.clamp(net(features), 1, float('inf'))
  File "C:\Users\19423\.conda\envs\nlp\lib\site-packages\torch\nn\modules\module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "D:\Projects\DeepLearning\Demo\MLP简单版.py", line 28, in forward
    X = F.relu(self.layer1(X))
  File "C:\Users\19423\.conda\envs\nlp\lib\site-packages\torch\nn\modules\module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\Users\19423\.conda\envs\nlp\lib\site-packages\torch\nn\modules\linear.py", line 103, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: [enforce fail at C:\cb\pytorch_1000000000000\work\c10\core\impl\alloc_cpu.cpp:81] data. DefaultCPUAllocator: not enough memory: you tried to allocate 48577536 bytes.